services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app # Sync the application code for development
      - ./data:/app/data # Mount the data directory as a volume
    stdin_open: true
    tty: true
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    expose:
      - "80"
    volumes:
      - ./front:/app # Optional: For development, sync local files with the container
    stdin_open: true
    tty: true
    depends_on:
      - api
    networks:
      - elastic

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - front
      - api
    networks:
      - elastic

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - network.host=0.0.0.0
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "discovery.seed_hosts=[]"
      - "cluster.initial_master_nodes=[]"
      - "action.destructive_requires_name=false"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health?pretty | grep -q '\"status\" : \"(green|yellow)\"'"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 60s
    ulimits:
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - IPC_LOCK

networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch-data:
    driver: local